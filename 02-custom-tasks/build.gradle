/*
    1. Write a custom task class of type `Greeting`. 
		- Add a property `greeting` for the greeting text. 
		- Assign a default value to it.
        - The task action should print the greeting text property. 
		- Add two tasks to your build script, both of type `Greeting`.
        - One should assign a custom value to the greeting property. 
		- Execute both tasks.
       
    2. Is there an alternative to using an annotation for adding a task action to a custom task?
*/

task GreetEric(type: GreetingTask) {
}

task GreetEmily(type: GreetingTask) {
    greeting = 'Emily'
}

class GreetingTask extends DefaultTask {
    String greeting = "Eric"

    GreetingTask() {
        def printAgain = new Action<GreetingTask>() {
            @Override
            void execute(GreetingTask greetingTask) {
                println "Hello hello $greeting"
            }
        }
        actions << printAgain
        group = "Greeting"
    }

    @TaskAction
    void print() {
        println "Hello $greeting"
    }

    @TaskAction
    void bye() {
        println "Bye $greeting"
    }
}
